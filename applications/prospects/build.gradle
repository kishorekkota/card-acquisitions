group 'card-acquisitions'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'groovy'
apply plugin: 'spring-cloud-contract'
apply plugin: 'maven-publish'
apply plugin: "com.palantir.docker"

sourceCompatibility = 1.8
buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url "http://repo.spring.io/release" }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:1.5.4.RELEASE"
        // remove::start[]
        classpath "org.springframework.cloud:spring-cloud-contract-gradle-plugin:2.0.0.M3"
        // https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-contract-gradle-plugin
       // compile group: 'org.springframework.cloud', name: 'spring-cloud-contract-gradle-plugin', version: '2.0.0.M3', ext: 'pom'
       // classpath 'se.transmode.gradle:gradle-docker:1.1'
        classpath "gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.13.0"

    }
}

repositories {
    mavenCentral()
    mavenLocal()
    maven { url "http://repo.spring.io/snapshot" }
    maven { url "http://repo.spring.io/milestone" }
    maven { url "http://repo.spring.io/release" }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
    compile('org.springframework.boot:spring-boot-starter-actuator')
    testCompile("org.springframework.cloud:spring-cloud-starter-contract-verifier")
    compile('org.projectlombok:lombok')
    compile("org.springframework.boot:spring-boot-devtools")

}
dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:Edgware.BUILD-SNAPSHOT"
    }
}

contracts {
    packageWithBaseClasses = 'com.example'

}


//buildDocker.dependsOn(build)

//task buildDocker(type: Docker) {
//    baseImage = 'java:latest'
//    push = project.hasProperty('push')
//    tag = 'geowarin/sout-chuck-norris'
//    addFile {
//        from jar
//        rename {'app.jar'}
//    }
//    entryPoint(['java', '-Djava.security.egd=file:/dev/./urandom', '-jar', '/app.jar'])
//    // exposePort(8080)
//}

docker {
    name 'test-name'
    tags 'latest'
    dockerfile file('Dockerfile')
    files tasks.build.outputs, 'file1.txt', 'file2.txt'
    buildArgs([BUILD_VERSION: 'version'])
    labels(['key': 'value'])
    pull true
    noCache true
}
